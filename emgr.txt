> EMGR    (/home/travis/.ansible/plugins/modules/emgr.py)

        The interim fix manager installs packages created with the
        epkg command and maintains a database containing interim fix
        information. It can perform the following operations install,
        commit, check, mount, unmount, remove, list interim fix and
        view package locks.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- action
        Controls what is performed.
        `install' performs an install of specified interim fix package
        `commit' performs a commit operation of the specified interim
        fix.
        `check' performs a check operation on installed interim fix.
        `mount' mounts specified interim fix that have been mount-
        installed
        `unmount' unmounts specified interim fix that have been mount-
        installed
        `remove' performs an uninstall of the specified interim fix.
        `view_package' displays all packages that are locked, their
        installer, and the locking label or labels.
        `display_ifix' displays the contents and topology of specified
        interim fix. This option is useful with `verbose'.
        `list' lists interim fix data
        (Choices: install, commit, check, mount, unmount, remove,
        view_package, display_ifix, list)[Default: list]
        type: str

- alternate_dir
        Specifies an alternative directory path.
        Can be used if `action' has one of following values `list',
        `install', `remove', `check', `mount', `unmount',
        `view_package'.
        [Default: (null)]
        type: path

- bosboot
        Controls the bosboot process.
        `skip' skip the usual bosboot process for Ifix that require
        rebooting.
        `load_debugger' loads the low-level debugger during AIX
        bosboot.
        `invoke_debugger' invoke the low-level debugger for AIX
        bosboot.
        Can be used if `action' has one of following values `install',
        `commit', `remove'.
        (Choices: skip, load_debugger, invoke_debugger)[Default:
        (null)]
        type: str

- commit
        Commits interim fix containing concurrent updates to disk
        after its installation.
        Can be used if `action=install'.
        [Default: False]
        type: bool

- extend_fs
        Attempts to resize any file systems where there is
        insufficient space.
        [Default: False]
        type: bool

- force
        Forces action.
        Can be used if `action' has one of following values `install',
        `remove'.
        When used `action=install', it specifies the interim fix
        installation can overwrite an existing package.
        When used `action=remove', it should be considered an
        emergency procedure because this method can create
        inconsistencies on the system.
        [Default: False]
        type: bool

- from_epkg
        Specifies to install an interim fix package file created with
        the epkg command.
        Can be used if `action=install'.
        [Default: False]
        type: bool

- ifix_label
        Specifies the interim fix label.
        Can be used if `action' has one of following values `list',
        `commit', `remove', `check', `mount', `unmount', `remove'.
        Required if `action==remove' and `force=True'.
        Mutually exclusive with `ifix_number', `ifix_vuid',
        `list_file'.
        [Default: (null)]
        type: str

- ifix_number
        Specifies the interim fix ID.
        Can be used if `action' has one of following values `list',
        `remove', `check', `mount', `unmount', `remove'.
        Mutually exclusive with `ifix_label', `ifix_vuid',
        `list_file'.
        [Default: (null)]
        type: str

- ifix_package
        Specifies the path of the interim fix package file.
        If `from_epkg=yes', then the file must be created with the
        epkg command and must end with the 16-bit compression
        extension, .Z. Otherwise the file is manage as a concurrent
        update ifix package file.
        Can be used if `action' has one of following values `install',
        `display_ifix'.
        Mutually exclusive with `list_file'.
        [Default: (null)]
        type: path

- ifix_vuid
        Specifies the interim fix VUID.
        Can be used if `action' has one of following values `list',
        `remove', `check', `mount', `unmount'.
        Mutually exclusive with `ifix_label', `ifix_number',
        `list_file'.
        [Default: (null)]
        type: str

- list_file
        Specifies a file that contains a list of package locations if
        `action=install' or a list of interim fix labels for the
        remove, mount, unmount and check operations.
        The file must have one item per line, blank lines or starting
        with
        Can be used if `action' has one of following values `install',
        `remove', `check', `mount', `unmount', `display_ifix'.
        Mutually exclusive with `ifix_label', `ifix_number',
        `ifix_vuid', `ifix_package'.
        [Default: (null)]
        type: path

- mount_install
        Perform a mount installation. When and interim fix is mount-
        installed, the interim fix files are mounted over the target
        files.
        This option is not supported for interim fix packages that
        require rebooting.
        Can be used if `action=install'. Cannot be set when
        `from_epkg=no'.
        [Default: False]
        type: bool

- package
        Specifies the package to view.
        Can be used if `action==view_package'
        [Default: (null)]
        type: str

- preview
        Perform a preview that runs all of the check operations but
        does not make any changes.
        Can be used if `action' has one of following values `install',
        `commit', `remove'.
        [Default: False]
        type: bool

- quiet
        Suppresses all output other than errors and strong warnings.
        Can be used if `action' has one of following values `install',
        `commit', `remove'.
        [Default: False]
        type: bool

- verbose
        Specifies the verbosity level. The verbosity increases with
        the value.
        Can be used if `action' has one of following values `list',
        `check', `view_package'.
        (Choices: 1, 2, 3)[Default: (null)]
        type: int

- working_dir
        Specifies an alternative working directory path instead of the
        default /tmp directory.
        If not specified the emgr command will use the /tmp directory.
        Can be used if `action' has one of following values `install',
        `remove', `check', `mount', `unmount', `display_ifix'.
        [Default: (null)]
        type: path


REQUIREMENTS:  AIX >= 7.1 TL3, Python >= 2.7

AUTHOR: AIX Development Team (@pbfinley1911)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: List interim fix on the system
  emgr:
    action: list

- name: Install ifix package from file generated with epkg
  emgr:
    action: install
    ifix_package: /usr/sys/inst.images/IJ22714s1a.200212.AIX72TL04SP00-01.epkg.Z
    working_dir: /usr/sys/inst.images
    from_epkg: yes
    extend_fs: yes

- name: List a specific ifix data in details
  emgr:
    action: list
    ifix_label: IJ22714s1a
    verbosity: 3

- name: Check an ifix
  emgr:
    action: check
    ifix_label: IJ22714s1a

- name: Preview ifix commit and display only errors and warnings
  emgr:
    action: commit
    ifix_label: IJ22714s1a
    preview: True
    quiet: True

- name: Remove an installed ifix based on its VUID
  emgr:
    action: remove
    ifix_vuid: 00F7CD554C00021210023020

- name: Display contents and topology of an ifix
  emgr:
    action: display_ifix
    ifix_package: /usr/sys/inst.images/IJ22714s1a.200212.AIX72TL04SP00-01.epkg.Z


RETURN VALUES:
 # 
