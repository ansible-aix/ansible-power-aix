> INSTALLP    (/home/travis/.ansible/plugins/modules/installp.py)

        Installs available software products in a compatible
        installation package.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- action
        Controls what is performed.
        `apply' to install with apply.
        `commit' to commit applied updates.
        `reject' to reject applied updates.
        `deinstall' to deinstall (remove) installed software.
        `cleanup' to clean up a failed installation.
        `list' to list all installable software on media.
        `list_fixes' to obtain a list of the Authorized Program
        Analysis Report (APAR) numbers and summaries.
        `list_applied' to list all software products and updates that
        have been applied but not committed.
        (Choices: apply, commit, reject, deinstall, cleanup, list,
        list_fixes, list_applied)[Default: apply]
        type: str

- agree_licenses
        Agrees to required software license agreements for software to
        be installed.
        [Default: False]
        type: bool

- base_only
        Limits the requested action to base level filesets.
        [Default: False]
        type: bool

- bosboot
        Performs a bosboot in the event that one is needed.
        [Default: True]
        type: bool

- commit
        Commit after apply.
        [Default: False]
        type: bool

- delete_image
        Deletes the installation image file after the software product
        or update has been successfully installed.
        [Default: False]
        type: bool

- dependencies
        Automatically installs any software products or updates that
        are requisites of the specified software product.
        Automatically removes or rejects dependents of the specified
        software.
        [Default: False]
        type: bool

- device
        The name of the device or directory containing installation
        images.
        [Default: (null)]
        type: str

- extend_fs
        Attempts to resize any file systems where there is
        insufficient space to do the installation.
        [Default: True]
        type: bool

- force
        Forces the installation of a software product even if there
        exists a previously installed version of the software product
        that is the same as or newer than the version currently being
        installed.
        [Default: False]
        type: bool

- install_list
        List of products to install
        `all' installs all products
        [Default: (null)]
        elements: str
        type: list

- parts
        Installs the specified part of the software product.
        `root'
        `share'
        `usr'
        [Default: (null)]
        elements: str
        type: list

- platform
        Specifies the platform.
        `POWER' specifies POWER processor-based platform packages
        only.
        `neutral' specifies neutral packages, that is, packages that
        are not restricted to the POWER processor-based platform.
        `all' specifies all packages.
        (Choices: POWER, neutral, all)[Default: all]
        type: str

- save
        Saves existing files that are replaced when installing or
        updating.
        [Default: True]
        type: bool

- updates_only
        Indicates that the requested action should be limited to
        software updates.
        [Default: False]
        type: bool


REQUIREMENTS:  AIX >= 7.1 TL3, Python >= 2.7

AUTHOR: AIX Development Team (@pbfinley1911)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: List all software products and installable options contained on an installation cartridge tape
  installp:
    action: list
    device: /dev/rmt0.1

- name: List all customer-reported problems fixed by all software products on an installation tape
  installp:
    action: list_fixes
    device: /dev/rmt0.1
    install_list: all

- name: Install all filesets within the bos.net software package and expand file systems if necessary
  installp:
    extend_fs: yes
    device: /usr/sys/inst.images
    install_list: bos.net

- name: Reinstall and commit the NFS software product option that is already installed on the system at the same level
  installp:
    commit: yes
    force: yes
    device: /dev/rmt0.1
    install_list: bos.net.nfs.client:4.1.0.0

- name: Remove a fileset named bos.net.tcp.server
  installp:
    action: deinstall
    install_list: bos.net.tcp.server


RETURN VALUES:

msg:
    description: The execution message.
    returned: always
    type: str
    sample: "Command 'installp' failed with return code 1"
stdout:
    description: The standard output.
    returned: always
    type: str
    sample: "
        *******************************************************************************\n
        installp PREVIEW:  deinstall operation will not actually occur.\n
        *******************************************************************************\n
        \n
        +-----------------------------------------------------------------------------+\n
                            Pre-deinstall Verification...\n
        +-----------------------------------------------------------------------------+\n
        Verifying selections...done\n
        Verifying requisites...done\n
        Results...\n
        \n
        WARNINGS\n
        --------\n
          Problems described in this section are not likely to be the source of any\n
          immediate or serious failures, but further actions may be necessary or\n
          desired.\n
        \n
          Not Installed\n
          -------------\n
          No software could be found on the system that could be deinstalled for the\n
          following requests:\n
        \n
            bos.sysmgt.nim.master                    \n
        \n
          (The fileset may not be currently installed, or you may have made a\n
           typographical error.)\n
        \n
          << End of Warning Section >>\n
        \n
        FILESET STATISTICS \n
        ------------------\n
            1  Selected to be deinstalled, of which:\n
                1  FAILED pre-deinstall verification\n
          ----\n
            0  Total to be deinstalled\n
        \n
        \n
        ******************************************************************************\n
        End of installp PREVIEW.  No deinstall operation has actually occurred.\n
        ******************************************************************************"
stderr:
    description: The standard error.
    returned: always
    type: str
    sample: "installp: Device /dev/rfd0 could not be accessed.\nSpecify a valid device name."

