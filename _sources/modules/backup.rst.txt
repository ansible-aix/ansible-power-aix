.. _backup_module:


backup -- Manage data or system volume group backup on a LPAR.
==============================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

This module manages backup image of data or system volume group.

It uses mksysb or savevg command to create the backup image of the volume group either in a file or onto a device.

It uses restvg or alt_disk_mksysb to restore a backup image to a disk.



Requirements
------------
The below requirements are needed on the host that executes this module.

- AIX >= 7.1 TL3
- Python >= 2.7



Parameters
----------

  action (True, str, None)
    Specifies the operation to perform on the LPAR.

    ``create`` to create a backup image.

    ``restore`` to restore a backup image.

    ``view`` to get useful information about a backup image.


  os_backup (optional, bool, False)
    Specifies the operation concerns the Operating system.

    If *yes*, it will use mksysb to create an Operating System backup of the root volume group and alt_disk_mksysb to restore the backup image onto a disk.

    If *no*, it will use savevg to list and back up all files belonging to a volume group and restvg to restore a backup image onto a disk.


  name (optional, str, None)
    Specifies the targets of the operation.

    Required if ``action=create`` and ``os_backup=no``, then it specifies the volume group to back up.

    If ``action=restore``, it specifies the disk device to restore to and do not use the one in the vgname.data file.


  flags (optional, str, None)
    Specifies additional flag to pass to the command. Refers to IBM documentation for details.

    For ``action=create`` and ``os_backup=no``, you could use *-a -A -b Blocks -p -T -V -Z*.

    For ``action=restore`` and ``os_backup=no``, you could use *-b Blocks -n -P PPsize*.


  location (optional, path, None)
    Specifies the location of the backup files. It can be a device or file path.

    When ``os_backup=no``, the default device is */dev/rmt0*.

    Can be used if ``os_backup=no``. Required if ``action=view``.


  data_file (optional, path, None)
    Specifies a filename to be used as the vgname.data file instead of the one contained within the backup image being restored.

    The filename can be specified by either a relative or an absolute pathname.

    Can be used if ``os_backup=no`` and ``action=restore``.


  create_data_file (optional, str, False)
    Specifies to create the data file containing information including the list of logical volumes file systems and their sizes, and the volume group name.

    When ``volume_group`` is the rootvg, data file will be in */image.data*.

    When ``volume_group`` is a data volume group, data file will be in */tmp/vgdata/vgname/vgname.data*.

    Specify ``create_data_file=mapfile`` to creates the MAPFILE containing the mapping of the logical to physical partitions for each logical volume in the volume group. This mapping can be used to allocate the same logical-to-physical mapping when the image is restored.

    Can be used if ``action=create`` and ``os_backup=no``.


  exclude_fs (optional, path, None)
    Specifies a file path that contains the list of file systems to exclude from the backup.

    One file system mount point is listed per line.

    Can be used if ``action=create`` and ``os_backup=no``.


  force (optional, bool, False)
    Specifies to overwrite existing backup image.

    Can be used if ``os_backup=no`` and ``action=create``.


  exclude_data (optional, bool, False)
    If ``action=create``, specifies to exclude user data from the backup. Backs up user volume group information and administration data files. This backs up files such as /tmp/vgdata/vgname/vgname.data and map files if any exist. Cannot be used on a rootvg.

    If ``action=restore``, specifies to recreate the volume group structure only without restoring any files or data.

    Can be used if ``os_backup=no`` and ``action=create`` or ``action=restore``.


  exclude_files (optional, bool, False)
    Specifies to exclude files specified in the /etc/exclude.vgname file from being backed up.

    The /etc/exclude.vgname file should contain patterns of file names that you do not want included in your system backup image. They are input to the pattern matching conventions of the grep command.

    Can be used if ``action=create`` and ``os_backup=no``.


  extend_fs (optional, bool, False)
    Specifies to extend the filesystem if needed.

    Can be used if ``action=create`` and ``os_backup=no``.


  minimize_lv_size (optional, bool, False)
    Specifies to create the logical volumes with minimum size possible to accomodate the file system.

    Can be used if ``action=restore`` and ``os_backup=no``.


  verbose (optional, bool, False)
    Specifies to run the operation in verbose mode.

    Can be used if ``action=create`` or ``action=restore``.





Notes
-----

.. note::
   - ``savevg`` only backs up varied-on volume group. The file systems must be mounted.
   - ``savevg`` backs up all logical volume information and will be recreated. However, only JFS-mounted file system data will be backed up. Raw logical volume data will NOT be backed up using a savevg.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: savevg of rootvg to /dev/hdisk1
      backup:
        action: create
        os_backup: no
        name: rootvg
        location: /dav/rmt1
        exclude_data: no
        exclude_files: no
        exclude_fs: /tmp/exclude_fs_list
        create_data_file: yes
        extend_fs: yes
        verbose: yes

    - name: savevg of datavg structure to /dev/hdisk2
      backup:
        action: create
        os_backup: no
        name: datavg
        location: /tmp/backup_datavg
        exclude_data: yes
        exclude_files: yes
        create_data_file: yes

    - name: view the vg backup image stored on /dev/hdisk1 with savevg
      backup:
        action: view
        os_backup: no
        location: /dev/hdisk1

    - name: restvg to restore datavg structure only to /dev/hdisk2
      backup:
        action: restore
        os_backup: no
        name: datavg
        location: /tmp/backup_datavg
        data_file: /tmp/datavg.mydata
        exclude_data: yes
        minimize_lv_size: yes
        flags: '-n'



Return Values
-------------

msg (always, str, AIX create backup operation successfull.)
  The execution message.


stdout (always, str, hdisk1 lv00 x           11 ./tmp/vgdata/datavg/image.info x          127 ./tmp/vgdata/vgdata.files11928014 x          127 ./tmp/vgdata/vgdata.files x         2320 ./tmp/vgdata/datavg/filesystems x         1530 ./tmp/vgdata/datavg/datavg.data x          278 ./tmp/vgdata/datavg/backup.data total size: 4393)
  The standard output of the command.


stderr (always, str, Will create the Volume Group:	datavg Target Disks:	  Allocation Policy: Shrink Filesystems:	yes Preserve Physical Partitions for each Logical Volume:	no
New volume on /tmp/datavg_backup: Cluster 51200 bytes (100 blocks). Volume number 1 Date of backup: Thu Aug  6 03:53:53 2020 Files backed up by name User root files restored: 6)
  The standard error of the command.


rc (always, int, )
  The return code of the command.

  Equal *-1* when the command has not been run.





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- AIX Development Team (@pbfinley1911)

